# -*- coding: utf-8 -*-
"""Breast_cancer_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13WbzQvuIa_VWPFJu36jqXg_ciGsJkeXw
"""

import numpy as np
import pandas as pd
import sklearn.datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

dataset=pd.read_csv('/content/data (1).csv')

print(dataset)

dataset=sklearn.datasets.load_breast_cancer()

print(dataset)

dataframe=pd.DataFrame(dataset.data,columns=dataset.feature_names)

dataframe.head()

dataframe["label"]=dataset.target

dataframe.shape

dataframe["label"].value_counts()

dataframe.groupby("label").mean()

X=dataframe.drop(columns="label",axis=1)
Y=dataframe["label"]

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

model=LogisticRegression()

model.fit(X_train,Y_train)

xtestprediction=model.predict(X_test)

accuracy=accuracy_score(xtestprediction,Y_test)

print(accuracy)

inputdata=(12.45,15.7,82.57,477.1,0.1278,0.17,0.1578,0.08089,0.2087,0.07613,0.3345,0.8902,2.217,27.19,0.00751,0.03345,0.03672,0.01137,0.02165,0.005082,15.47,23.75,103.4,741.6,0.1791,0.5249,0.5355,0.1741,0.3985,0.1244
)
asnp=np.asarray(inputdata)

reshaped=asnp.reshape(1,-1)

prediction=model.predict(reshaped)

print(prediction)

if (prediction[0]==0) :
  print("malignant")
else:
  print("benign")

